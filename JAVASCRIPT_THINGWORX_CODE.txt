function Traffic_signal_service()
{
    var count_of_cars;
var incoming_rate;
var outgoing_rate;
var green_time;
var green_lit;
//static var north_masked=PayloadJSON.North_Masked;
var global_sig_time;
var wait_time = [0,0,0,0];
me.Global_Count++;
count_of_cars= [parseInt(Things["BLIP_traffic_thing"].North_Cars_num),parseInt(Things["BLIP_traffic_thing"].South_Cars_num),parseInt(Things["BLIP_traffic_thing"].East_Cars_num),parseInt(Things["BLIP_traffic_thing"].West_Cars_num)];
incoming_rate=[parseInt(Things["BLIP_traffic_thing"].North_Cars_in),parseInt(Things["BLIP_traffic_thing"].South_Cars_in),parseInt(Things["BLIP_traffic_thing"].East_Cars_in),parseInt(Things["BLIP_traffic_thing"].West_Cars_in)];
outgoing_rate=[parseInt(Things["BLIP_traffic_thing"].North_Cars_out),parseInt(Things["BLIP_traffic_thing"].South_Cars_out),parseInt(Things["BLIP_traffic_thing"].East_Cars_out),parseInt(Things["BLIP_traffic_thing"].West_Cars_out)];
green_time=[me.North_Green_Time,me.South_Green_Time,me.East_Green_Time,me.West_Green_Time];
green_lit=[me.North_Green_Lit,me.South_Green_Lit,me.East_Green_Lit,me.West_Green_Lit];
//static var north_masked=PayloadJSON.North_Masked;
global_sig_time=[me.North_Global_Sig_Time,me.South_Global_Sig_Time,me.East_Global_Sig_Time,me.West_Global_Sig_Time];
var masked= [me.North_Masked,me.South_Masked,me.East_Masked,me.West_Masked];
var already_done= [false,false,false,false];
var i;
var d;
var temp;
//var x;
var arr= [count_of_cars[0],count_of_cars[1],count_of_cars[2],count_of_cars[3]];
var arr_unsorted= [count_of_cars[0],count_of_cars[1],count_of_cars[2],count_of_cars[3]];
arr.sort(function(a,b){return b-a}); //array is sorted here
var b= arr[0];
var c= arr_unsorted.indexOf(b); //compared with unsorted array and got the index
if(masked[0]==true && masked[1]==true && masked[2]==true && masked[3]==true)
	{ masked= [false,false,false,false];
		}
for(i=0;i<4;i++)
{
	
	if(c==i)
{
	if(!masked[i])
	{
	    green_lit[i]=true; masked[i]= true;
            var sum_arr= arr.reduce(function(a, b) {return a + b}, 0);
			 d= (b+1)/sum_arr*global_sig_time[i];
			 //x= count_of_cars[i]/outgoing_rate[i];
			//d= Math.min(d,x);
			d= Math.round(d);
			wait_time[i]=0;
			green_time[i]=d; 
		already_done[i]=true;
		
        if(green_time[i]<5)
	{
        	count_of_cars[i]=0;
	}
	}
	else
	{
		if(b==arr[0])
		{
		b=arr[1];
		} else if(b==arr[1])
		{
			b=arr[2];
		}
			else if(b==arr[2]){
			b=arr[3];
		}
			else {break;}
        c=arr_unsorted.indexOf(b);
	if(masked[c])
	{
		for(temp=0;temp<4;temp++)
		{
			if(arr_unsorted[temp]==b && !masked[temp])
			{c= temp;break;}
		}
		if(c==arr_unsorted.indexOf(b))
		{	
			for(temp=0;temp<4;temp++)
		{
			if(arr_unsorted[temp]!=b && !masked[temp])
			{c= temp;break;}
		}
		b= arr_unsorted[c];
        }}
		i=-1;
		continue;}} }
for(i=0;i<4;i++)
{
	if(!already_done[i])
		{
            	green_lit[i]=false;wait_time[i]=d;green_time[i]=0;already_done[i]=true;}}
if(me.Global_Count>4)
{ me.Global_Count=0;}
 me.East_wait_time= wait_time[2];me.South_wait_time= wait_time[1];me.North_wait_time= wait_time[0];me.West_wait_time= wait_time[3];me.East_Outgoing_Rate= parseInt(Things["BLIP_traffic_thing"].East_Cars_out);me.West_Outgoing_Rate= parseInt(Things["BLIP_traffic_thing"].West_Cars_out);me.North_Outgoing_Rate= parseInt(Things["BLIP_traffic_thing"].North_Cars_out);me.South_Outgoing_Rate= parseInt(Things["BLIP_traffic_thing"].South_Cars_out);
    me.East_Count_of_Cars= count_of_cars[2];me.West_Count_of_Cars= count_of_cars[3];me.North_Count_of_Cars= count_of_cars[0];me.South_Count_of_Cars= count_of_cars[1];
    me.East_Incoming_Rate= parseInt(Things["BLIP_traffic_thing"].East_Cars_in);me.West_Incoming_Rate= parseInt(Things["BLIP_traffic_thing"].West_Cars_in);me.North_Incoming_Rate= parseInt(Things["BLIP_traffic_thing"].North_Cars_in);me.South_Incoming_Rate= parseInt(Things["BLIP_traffic_thing"].South_Cars_in);
    me.East_Green_Lit= green_lit[2]; me.West_Green_Lit= green_lit[3];me.North_Green_Lit= green_lit[0];me.South_Green_Lit= green_lit[1];
	me.East_Green_Time=green_time[2];me.West_Green_Time= green_time[3];me.North_Green_Time= green_time[0];me.South_Green_Time= green_time[1];
	me.East_Global_Sig_Time= global_sig_time[2];me.West_Global_Sig_Time= global_sig_time[3];me.North_Global_Sig_Time= global_sig_time[0];me.South_Global_Sig_Time= global_sig_time[1];
me.East_Masked= masked[2];me.West_Masked= masked[3];me.North_Masked= masked[0];me.South_Masked= masked[1];
}

var dummy= PayloadJSON.dummy;
var a;


for(a=0;a<2;a++)
{
    Traffic_signal_service();
    
    if(me.North_Green_Lit){
        while(me.North_Green_Time>0){
            me.North_Green_Time--;
            if((Things["BLIP_traffic_thing"].North_Cars_num ==0))
                {me.North_Green_Time=0; break;}
        pause('1000');
        }}
    else  if(me.South_Green_Lit){
        while(me.South_Green_Time>0){
            if((Things["BLIP_traffic_thing"].South_Cars_num ==0))
            {me.South_Green_Time=0; break;}
            me.South_Green_Time--;
            pause('1000');}}
    else  if(me.East_Green_Lit){while(me.East_Green_Time>0){
        me.East_Green_Time--;
        if((Things["BLIP_traffic_thing"].East_Cars_num ==0))
            {me.East_Green_Time=0; break;}
        pause('1000');}}
    else  if(me.West_Green_Lit){while(me.West_Green_Time>0){
        me.West_Green_Time--;
        if((Things["BLIP_traffic_thing"].West_Cars_num ==0))
            {me.West_Green_Time=0; break;}
        pause('1000');}}
}
